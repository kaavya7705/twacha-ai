Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var shared = require('@uploadthing/shared');
var client = require('uploadthing/client');
var buttonClient = require('./button-client-Cx8_hTCN.cjs');
var dropzoneClient = require('./dropzone-client-C9Ah4LDi.cjs');
var uploaderClient = require('./uploader-client-C8g6udky.cjs');

const generateUploadButton = (opts)=>{
    shared.warnIfInvalidPeerDependency("@uploadthing/react", buttonClient.peerDependencies.uploadthing, client.version);
    const url = shared.resolveMaybeUrlArg(opts?.url);
    const TypedButton = (props)=>/*#__PURE__*/ jsxRuntime.jsx(buttonClient.UploadButton, {
            ...props,
            url: url
        });
    return TypedButton;
};
const generateUploadDropzone = (opts)=>{
    shared.warnIfInvalidPeerDependency("@uploadthing/react", buttonClient.peerDependencies.uploadthing, client.version);
    const url = shared.resolveMaybeUrlArg(opts?.url);
    const TypedDropzone = (props)=>/*#__PURE__*/ jsxRuntime.jsx(dropzoneClient.UploadDropzone, {
            ...props,
            url: url
        });
    return TypedDropzone;
};
const generateUploader = (opts)=>{
    shared.warnIfInvalidPeerDependency("@uploadthing/react", buttonClient.peerDependencies.uploadthing, client.version);
    const url = shared.resolveMaybeUrlArg(opts?.url);
    const TypedUploader = (props)=>/*#__PURE__*/ jsxRuntime.jsx(uploaderClient.Uploader, {
            ...props,
            url: url
        });
    return TypedUploader;
};

exports.UploadButton = buttonClient.UploadButton;
exports.generateReactHelpers = buttonClient.generateReactHelpers;
exports.UploadDropzone = dropzoneClient.UploadDropzone;
exports.useDropzone = dropzoneClient.useDropzone;
exports.Uploader = uploaderClient.Uploader;
exports.generateUploadButton = generateUploadButton;
exports.generateUploadDropzone = generateUploadDropzone;
exports.generateUploader = generateUploader;
